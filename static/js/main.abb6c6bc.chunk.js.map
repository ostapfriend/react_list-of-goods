{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","isVisible","isReversed","isSorted","minLength","sortBy","visibleGoodsList","setState","reverse","reset","sortByLength","sortByAlphabetically","this","newGoods","sort","good1","good2","length","localeCompare","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAYIC,E,4MACJC,MAAyB,CACvBC,MAAOH,EACPI,WAAW,EACXC,YAAY,EACZC,UAAU,EACVC,UAAW,GACXC,OAAQ,kB,EAGVC,iBAAmB,WACjB,EAAKC,UAAS,SAACR,GAAD,MAAY,CACxBE,WAAYF,EAAME,e,EAItBO,QAAU,WACR,EAAKD,UAAS,SAACR,GAAD,MAAY,CACxBG,YAAaH,EAAMG,gB,EAIvBO,MAAQ,WACN,EAAKF,UAAS,iBAAO,CACnBF,OAAQ,GACRH,YAAY,EACZC,UAAU,O,EAIdO,aAAe,WACb,EAAKH,SAAS,CACZJ,UAAU,EACVE,OAAQ,Y,EAIZM,qBAAuB,WACrB,EAAKJ,SAAS,CACZJ,UAAU,EACVE,OAAQ,c,4CAIZ,WACE,MAMIO,KAAKb,MALPE,EADF,EACEA,UACAD,EAFF,EAEEA,MACAE,EAHF,EAGEA,WACAG,EAJF,EAIEA,OACAF,EALF,EAKEA,SAGIU,EAAQ,YAAOb,GAyBrB,OAvBIG,GACFU,EAASC,MAAK,SAACC,EAAOC,GACpB,OAAQX,GACN,IAAK,SACH,OAAOU,EAAME,OAASD,EAAMC,OAE9B,IAAK,WAEH,OAAKf,EAIEc,EAAME,cAAcH,GAHlBA,EAAMG,cAAcF,GAK/B,QAAS,OAAO,MAKlBd,GACFW,EAASL,UAIT,sBAAKW,UAAU,MAAf,WACIlB,GACA,wBACEmB,KAAK,SACLD,UAAU,cACVE,QAAST,KAAKN,iBAHhB,mBASDL,GACC,sBAAKkB,UAAU,iBAAf,UACE,oBAAIA,UAAU,YAAd,SACIN,EAASS,KAAI,SAACC,GAAD,OACb,oBAEEJ,UAAU,YAFZ,SAIGI,GAHIA,QAQX,sBAAKJ,UAAU,+BAAf,UACE,wBACEA,UAAU,cACVE,QAAST,KAAKJ,QACdY,KAAK,SAHP,qBAQA,wBACED,UAAU,cACVE,QAAST,KAAKH,MACdW,KAAK,SAHP,sBASF,sBAAKD,UAAU,+BAAf,UACE,wBACEA,UAAU,cACVE,QAAST,KAAKF,aACdU,KAAK,SAHP,4BAQA,wBACED,UAAU,cACVE,QAAST,KAAKD,qBACdS,KAAK,SAHP,8C,GAlIII,IAAMC,WAiJT3B,ICxKf4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.abb6c6bc.chunk.js","sourcesContent":["/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[];\n  isVisible: boolean;\n  isReversed: boolean,\n  isSorted: boolean,\n  minLength: number,\n  sortBy: string,\n};\n\nclass App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    goods: goodsFromServer,\n    isVisible: false,\n    isReversed: false,\n    isSorted: false,\n    minLength: 10,\n    sortBy: 'alphabetically',\n  };\n\n  visibleGoodsList = () => {\n    this.setState((state) => ({\n      isVisible: !state.isVisible,\n    }));\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState(() => ({\n      sortBy: '',\n      isReversed: false,\n      isSorted: false,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState({\n      isSorted: true,\n      sortBy: 'length',\n    });\n  };\n\n  sortByAlphabetically = () => {\n    this.setState({\n      isSorted: true,\n      sortBy: 'alphabet',\n    });\n  };\n\n  render(): React.ReactNode {\n    const {\n      isVisible,\n      goods,\n      isReversed,\n      sortBy,\n      isSorted,\n    } = this.state;\n\n    const newGoods = [...goods];\n\n    if (isSorted) {\n      newGoods.sort((good1, good2): number => {\n        switch (sortBy) {\n          case 'length':\n            return good1.length - good2.length;\n\n          case 'alphabet':\n            // I added \"if\" because if the array is flipped it will not sort correctly\n            if (!isReversed) {\n              return good1.localeCompare(good2);\n            }\n\n            return good2.localeCompare(good1);\n\n          default: return 0;\n        }\n      });\n    }\n\n    if (isReversed) {\n      newGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        {!isVisible && (\n          <button\n            type=\"button\"\n            className=\"App__button\"\n            onClick={this.visibleGoodsList}\n          >\n            Start\n          </button>\n        )}\n\n        {isVisible && (\n          <div className=\"App__container\">\n            <ul className=\"App__list\">\n              {(newGoods.map((good) => (\n                <li\n                  key={good}\n                  className=\"App__item\"\n                >\n                  {good}\n                </li>\n              )))}\n            </ul>\n\n            <div className=\"App__serviceContainer-button\">\n              <button\n                className=\"App__button\"\n                onClick={this.reverse}\n                type=\"button\"\n              >\n                Reverse\n              </button>\n\n              <button\n                className=\"App__button\"\n                onClick={this.reset}\n                type=\"button\"\n              >\n                Reset\n              </button>\n            </div>\n\n            <div className=\"App__sortingContainer-button\">\n              <button\n                className=\"App__button\"\n                onClick={this.sortByLength}\n                type=\"button\"\n              >\n                Sort by length\n              </button>\n\n              <button\n                className=\"App__button\"\n                onClick={this.sortByAlphabetically}\n                type=\"button\"\n              >\n                Sort alphabetically\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}